1. Pamiętaj, że producent też musi mieć obsługę błędów, żeby nie zgubić nadawanej wiadomości.

Ponawianie wysyłki
- można ponawiać do skutku co 1s
- można ponawiać z odstępami wykładniczymi, 2s, 4s, 8s itd.
- jak n nieudanych wysyłkach, trzeba wiadomość przekazać na inną kolejkę, albo wygenerować wiadomość, że się nie udało. Ta wiadomość może być wykorzystana w systemie.

Polly - do resiliency można wykorzystać biblioteki Polly
- 3 próby wysyłki po stronie brokera
- 3 próby przetworzenia po stronie klienta

Poison messages można przekierować na dead-letter-queue
Parametr x-dead-letter-exchange

Innym podejściem (komplementarnym) jest opakowanie problematycznej wiadomości w Fault<T>, który zawiera dodatkowe informacje o problemach, i opublikowanie w świat. Potraktowanie sytuacji jako jakiegoś case biznesowego, na który trzeba zareagować.

A jak wykryć brak konsumenta przez producenta?

Co zrobić przy błędzie zapisu do kolejki? (overflow w rabbit MQ:)
1. Usunąć najstarszą wiadomość - drop-head
2. W ogóle nie zapisać i rzucić błędem - reject-publish

publisher-confirms? - oczekujemy ack lub nack od brokera.

channel.WaitForConfirmsOrDie - nie ma potwierdzenia to koniec przetwarzania

